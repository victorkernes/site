{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport GhostContentAPI from \"@tryghost/content-api\";\nvar api = new GhostContentAPI({\n  url: \"http://localhost:2369\",\n  key: \"b4ee8d5856cca0a82749047208\",\n  version: \"v3\"\n});\nexport function getPosts() {\n  return _regeneratorRuntime.async(function getPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api.posts.browse({\n            limit: \"all\"\n          })[\"catch\"](function (err) {\n            console.error(err);\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nexport function getSinglePost(postSlug) {\n  return _regeneratorRuntime.async(function getSinglePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(api.posts.read({\n            slug: postSlug\n          })[\"catch\"](function (err) {\n            console.error(err);\n          }));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}