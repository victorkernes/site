{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/victor/Projects/victorkernes.com/pages/semantics/index.js\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { getFeaturedPosts } from \"~/api/ghost\";\n\nfunction Semantics(props) {\n  var initialData = props.posts;\n\n  var _useSWR = useSWR(\"/api/getFeaturedPosts\", getFeaturedPosts, {\n    initialData: initialData\n  }),\n      posts = _useSWR.data;\n\n  return __jsx(\"div\", {\n    withHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(SectionHeading, {\n    \"data-cy\": \"overthought\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Overthought\"), __jsx(LargeSubheading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Overthinking out loud about design, development, and building products.\"), __jsx(OverthoughtSubscribeBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(OverthoughtList, {\n    posts: posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nSemantics.getInitialProps = function _callee(_ref) {\n  var res, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref.res;\n          cacheSsrRes({\n            res: res\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getFeaturedPosts());\n\n        case 4:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Semantics;","map":{"version":3,"sources":["/Users/victor/Projects/victorkernes.com/pages/semantics/index.js"],"names":["React","getFeaturedPosts","Semantics","props","initialData","posts","useSWR","data","getInitialProps","res","cacheSsrRes"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAMC,WAAW,GAAGD,KAAK,CAACE,KAA1B;;AADwB,gBAEAC,MAAM,CAAC,uBAAD,EAA0BL,gBAA1B,EAA4C;AACxEG,IAAAA,WAAW,EAAXA;AADwE,GAA5C,CAFN;AAAA,MAEVC,KAFU,WAEhBE,IAFgB;;AAMxB,SACE;AAAK,IAAA,UAAU,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,eAAQ,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFF,EAOE,MAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAWE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAEF,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD;;AAEDH,SAAS,CAACM,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AAC1BC,UAAAA,WAAW,CAAC;AAAED,YAAAA,GAAG,EAAHA;AAAF,WAAD,CAAX;AAD0B;AAAA,2CAENR,gBAAgB,EAFV;;AAAA;AAEpBI,UAAAA,KAFoB;AAAA,2CAGnB;AAAEA,YAAAA,KAAK,EAAEA;AAAT,WAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAMA,eAAeH,SAAf","sourcesContent":["import * as React from \"react\";\nimport { getFeaturedPosts } from \"~/api/ghost\";\n\nfunction Semantics(props) {\n  const initialData = props.posts;\n  const { data: posts } = useSWR(\"/api/getFeaturedPosts\", getFeaturedPosts, {\n    initialData\n  });\n\n  return (\n    <div withHeader>\n      <SectionHeading data-cy=\"overthought\">\n        <H1>Overthought</H1>\n        <LargeSubheading>\n          Overthinking out loud about design, development, and building\n          products.\n        </LargeSubheading>\n\n        <OverthoughtSubscribeBox />\n      </SectionHeading>\n\n      <OverthoughtList posts={posts} />\n    </div>\n  );\n}\n\nSemantics.getInitialProps = async ({ res }) => {\n  cacheSsrRes({ res });\n  const posts = await getFeaturedPosts();\n  return { posts: posts };\n};\n\nexport default Semantics;"]},"metadata":{},"sourceType":"module"}